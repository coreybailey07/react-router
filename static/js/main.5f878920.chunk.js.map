{"version":3,"sources":["example/basic.jsx","example/url-parameters.jsx","example/nesting.jsx","example/redirects-auth.jsx","example/custom-link.jsx","example/preventing-transitions.jsx","example/no-match-404.jsx","example/recursive-paths.jsx","example/sidebar.jsx","example/animated-transitions.jsx","example/route-config.jsx","example/modal-gallery.jsx","example/staticrouter-context.jsx","example/query-parameters.jsx","App.js","reportWebVitals.js","index.js"],"names":["BasicExample","to","exact","path","Home","About","Dashboard","ParamsExample","children","Child","id","useParams","NestingExample","Topics","useRouteMatch","url","Topic","topicId","AuthExample","ProvideAuth","AuthButton","PublicPage","LoginPage","PrivateRoute","ProtectedPage","fakeAuth","isAuthenticated","signin","cb","setTimeout","signout","authContext","createContext","auth","useState","user","setUser","useProvideAuth","Provider","value","useAuth","useContext","history","useHistory","onClick","push","rest","render","location","pathname","state","from","useLocation","replace","CustomLinkExample","OldSchoolMenuLink","activeOnlyWhenExact","label","match","className","PreventingTransitionsExample","BlockingForm","isBlocking","setIsBlocking","onSubmit","event","preventDefault","target","reset","when","message","size","placeholder","onChange","length","NoMatchExample","WillMatch","NoMatch","RecursiveExample","Person","person","find","parseInt","name","friends","map","PEEPS","p","routes","sidebar","main","SidebarExample","style","display","padding","width","background","listStyleType","route","index","flex","AnimationExample","AnimationApp","styles","fill","nav","NavLink","content","TransitionGroup","CSSTransition","classNames","timeout","HSL","RGB","key","props","navItem","color","h","s","l","hsl","r","g","b","rgb","position","left","right","top","bottom","textAlign","margin","height","paddingTop","fontSize","component","i","RouteWithSubRoutes","RouteConfigExample","ModalGalleryExample","ModalSwitch","Gallery","ImageView","Modal","IMAGES","title","Thumbnail","Image","image","back","e","stopPropagation","goBack","border","type","RouteStatus","staticContext","statusCode","PrintContext","JSON","stringify","StaticRouterExample","context","this","Component","QueryParamsExample","QueryParamsDemo","query","URLSearchParams","search","get","App","Cmpt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5f878920.chunk.js","sourcesContent":["// import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n// This site has 3 pages, all of which are rendered\n// dynamically in the browser (not server rendered).\n//\n// Although the page does not ever refresh, notice how\n// React Router keeps the URL up to date as you navigate\n// through the site. This preserves the browser history,\n// making sure things like the back button and bookmarks\n// work properly.\n\nexport default function BasicExample() {\n  return (\n    <Router>\n      <div>\n        <ul>\n          <li>\n            <Link to=\"/\">Home</Link>\n          </li>\n          <li>\n            <Link to=\"/about\">About</Link>\n          </li>\n          <li>\n            <Link to=\"/dashboard\">Dashboard</Link>\n          </li>\n        </ul>\n\n        <hr />\n\n        {/*\n          A <Switch> looks through all its children <Route>\n          elements and renders the first one whose path\n          matches the current URL. Use a <Switch> any time\n          you have multiple routes, but you want only one\n          of them to render at a time\n        */}\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n          <Route path=\"/dashboard\">\n            <Dashboard />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\n// You can think of these components as \"pages\"\n// in your app.\n\nfunction Home() {\n  return (\n    <div>\n      <h2>Home</h2>\n    </div>\n  );\n}\n\nfunction About() {\n  return (\n    <div>\n      <h2>About</h2>\n    </div>\n  );\n}\n\nfunction Dashboard() {\n  return (\n    <div>\n      <h2>Dashboard</h2>\n    </div>\n  );\n}","// import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useParams\n} from \"react-router-dom\";\n\n// Params are placeholders in the URL that begin\n// with a colon, like the `:id` param defined in\n// the route in this example. A similar convention\n// is used for matching dynamic segments in other\n// popular web frameworks like Rails and Express.\n\nexport default function ParamsExample() {\n  return (\n    <Router>\n      <div>\n        <h2>Accounts</h2>\n\n        <ul>\n          <li>\n            <Link to=\"/netflix\">Netflix</Link>\n          </li>\n          <li>\n            <Link to=\"/zillow-group\">Zillow Group</Link>\n          </li>\n          <li>\n            <Link to=\"/yahoo\">Yahoo</Link>\n          </li>\n          <li>\n            <Link to=\"/modus-create\">Modus Create</Link>\n          </li>\n        </ul>\n\n        <Switch>\n          <Route path=\"/:id\" children={<Child />} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nfunction Child() {\n  // We can use the `useParams` hook here to access\n  // the dynamic pieces of the URL.\n  let { id } = useParams();\n\n  return (\n    <div>\n      <h3>ID: {id}</h3>\n    </div>\n  );\n}\n","// import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useParams,\n  useRouteMatch\n} from \"react-router-dom\";\n\n// Since routes are regular React components, they\n// may be rendered anywhere in the app, including in\n// child elements.\n//\n// This helps when it's time to code-split your app\n// into multiple bundles because code-splitting a\n// React Router app is the same as code-splitting\n// any other React app.\n\nexport default function NestingExample() {\n  return (\n    <Router>\n      <div>\n        <ul>\n          <li>\n            <Link to=\"/\">Home</Link>\n          </li>\n          <li>\n            <Link to=\"/topics\">Topics</Link>\n          </li>\n        </ul>\n\n        <hr />\n\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/topics\">\n            <Topics />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nfunction Home() {\n  return (\n    <div>\n      <h2>Home</h2>\n    </div>\n  );\n}\n\nfunction Topics() {\n  // The `path` lets us build <Route> paths that are\n  // relative to the parent route, while the `url` lets\n  // us build relative links.\n  let { path, url } = useRouteMatch();\n\n  return (\n    <div>\n      <h2>Topics</h2>\n      <ul>\n        <li>\n          <Link to={`${url}/rendering`}>Rendering with React</Link>\n        </li>\n        <li>\n          <Link to={`${url}/components`}>Components</Link>\n        </li>\n        <li>\n          <Link to={`${url}/props-v-state`}>Props v. State</Link>\n        </li>\n      </ul>\n\n      <Switch>\n        <Route exact path={path}>\n          <h3>Please select a topic.</h3>\n        </Route>\n        <Route path={`${path}/:topicId`}>\n          <Topic />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nfunction Topic() {\n  // The <Route> that rendered this component has a\n  // path of `/topics/:topicId`. The `:topicId` portion\n  // of the URL indicates a placeholder that we can\n  // get from `useParams()`.\n  let { topicId } = useParams();\n\n  return (\n    <div>\n      <h3>{topicId}</h3>\n    </div>\n  );\n}\n","// import React, { useContext, createContext, useState } from \"react\";\nimport { useContext, createContext, useState } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect,\n  useHistory,\n  useLocation\n} from \"react-router-dom\";\n\n// This example has 3 pages: a public page, a protected\n// page, and a login screen. In order to see the protected\n// page, you must first login. Pretty standard stuff.\n//\n// First, visit the public page. Then, visit the protected\n// page. You're not yet logged in, so you are redirected\n// to the login page. After you login, you are redirected\n// back to the protected page.\n//\n// Notice the URL change each time. If you click the back\n// button at this point, would you expect to go back to the\n// login page? No! You're already logged in. Try it out,\n// and you'll see you go back to the page you visited\n// just *before* logging in, the public page.\n\nexport default function AuthExample() {\n  return (\n    <ProvideAuth>\n      <Router>\n        <div>\n          <AuthButton />\n\n          <ul>\n            <li>\n              <Link to=\"/public\">Public Page</Link>\n            </li>\n            <li>\n              <Link to=\"/protected\">Protected Page</Link>\n            </li>\n          </ul>\n\n          <Switch>\n            <Route path=\"/public\">\n              <PublicPage />\n            </Route>\n            <Route path=\"/login\">\n              <LoginPage />\n            </Route>\n            <PrivateRoute path=\"/protected\">\n              <ProtectedPage />\n            </PrivateRoute>\n          </Switch>\n        </div>\n      </Router>\n    </ProvideAuth>\n  );\n}\n\nconst fakeAuth = {\n  isAuthenticated: false,\n  signin(cb) {\n    fakeAuth.isAuthenticated = true;\n    setTimeout(cb, 100); // fake async\n  },\n  signout(cb) {\n    fakeAuth.isAuthenticated = false;\n    setTimeout(cb, 100);\n  }\n};\n\n/** For more details on\n * `authContext`, `ProvideAuth`, `useAuth` and `useProvideAuth`\n * refer to: https://usehooks.com/useAuth/\n */\nconst authContext = createContext();\n\nfunction ProvideAuth({ children }) {\n  const auth = useProvideAuth();\n  return (\n    <authContext.Provider value={auth}>\n      {children}\n    </authContext.Provider>\n  );\n}\n\nfunction useAuth() {\n  return useContext(authContext);\n}\n\nfunction useProvideAuth() {\n  const [user, setUser] = useState(null);\n\n  const signin = cb => {\n    return fakeAuth.signin(() => {\n      setUser(\"user\");\n      cb();\n    });\n  };\n\n  const signout = cb => {\n    return fakeAuth.signout(() => {\n      setUser(null);\n      cb();\n    });\n  };\n\n  return {\n    user,\n    signin,\n    signout\n  };\n}\n\nfunction AuthButton() {\n  let history = useHistory();\n  let auth = useAuth();\n\n  return auth.user ? (\n    <p>\n      Welcome!{\" \"}\n      <button\n        onClick={() => {\n          auth.signout(() => history.push(\"/\"));\n        }}\n      >\n        Sign out\n      </button>\n    </p>\n  ) : (\n    <p>You are not logged in.</p>\n  );\n}\n\n// A wrapper for <Route> that redirects to the login\n// screen if you're not yet authenticated.\nfunction PrivateRoute({ children, ...rest }) {\n  let auth = useAuth();\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        auth.user ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: { from: location }\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n\nfunction PublicPage() {\n  return <h3>Public</h3>;\n}\n\nfunction ProtectedPage() {\n  return <h3>Protected</h3>;\n}\n\nfunction LoginPage() {\n  let history = useHistory();\n  let location = useLocation();\n  let auth = useAuth();\n\n  let { from } = location.state || { from: { pathname: \"/\" } };\n  let login = () => {\n    auth.signin(() => {\n      history.replace(from);\n    });\n  };\n\n  return (\n    <div>\n      <p>You must log in to view the page at {from.pathname}</p>\n      <button onClick={login}>Log in</button>\n    </div>\n  );\n}\n","// import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useRouteMatch\n} from \"react-router-dom\";\n\n// This example show how you could create a custom\n// <Link> that renders something special when the URL\n// is the same as the one the <Link> points to.\n\nexport default function CustomLinkExample() {\n  return (\n    <Router>\n      <div>\n        <OldSchoolMenuLink\n          activeOnlyWhenExact={true}\n          to=\"/\"\n          label=\"Home\"\n        />\n        <OldSchoolMenuLink to=\"/about\" label=\"About\" />\n\n        <hr />\n\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nfunction OldSchoolMenuLink({ label, to, activeOnlyWhenExact }) {\n  let match = useRouteMatch({\n    path: to,\n    exact: activeOnlyWhenExact\n  });\n\n  return (\n    <div className={match ? \"active\" : \"\"}>\n      {match && \"> \"}\n      <Link to={to}>{label}</Link>\n    </div>\n  );\n}\n\nfunction Home() {\n  return (\n    <div>\n      <h2>Home</h2>\n    </div>\n  );\n}\n\nfunction About() {\n  return (\n    <div>\n      <h2>About</h2>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Prompt\n} from \"react-router-dom\";\n\n// Sometimes you want to prevent the user from\n// navigating away from a page. The most common\n// use case is when they have entered some data\n// into a form but haven't submitted it yet, and\n// you don't want them to lose it.\n\nexport default function PreventingTransitionsExample() {\n  return (\n    <Router>\n      <ul>\n        <li>\n          <Link to=\"/\">Form</Link>\n        </li>\n        <li>\n          <Link to=\"/one\">One</Link>\n        </li>\n        <li>\n          <Link to=\"/two\">Two</Link>\n        </li>\n      </ul>\n\n      <Switch>\n        <Route path=\"/\" exact children={<BlockingForm />} />\n        <Route path=\"/one\" children={<h3>One</h3>} />\n        <Route path=\"/two\" children={<h3>Two</h3>} />\n      </Switch>\n    </Router>\n  );\n}\n\nfunction BlockingForm() {\n  let [isBlocking, setIsBlocking] = useState(false);\n\n  return (\n    <form\n      onSubmit={event => {\n        event.preventDefault();\n        event.target.reset();\n        setIsBlocking(false);\n      }}\n    >\n      <Prompt\n        when={isBlocking}\n        message={location =>\n          `Are you sure you want to go to ${location.pathname}`\n        }\n      />\n\n      <p>\n        Blocking?{\" \"}\n        {isBlocking ? \"Yes, click a link or the back button\" : \"Nope\"}\n      </p>\n\n      <p>\n        <input\n          size=\"50\"\n          placeholder=\"type something to block transitions\"\n          onChange={event => {\n            setIsBlocking(event.target.value.length > 0);\n          }}\n        />\n      </p>\n\n      <p>\n        <button>Submit to stop blocking</button>\n      </p>\n    </form>\n  );\n}\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Switch,\n  Redirect,\n  useLocation\n} from \"react-router-dom\";\n\n// You can use the last <Route> in a <Switch> as a kind of\n// \"fallback\" route, to catch 404 errors.\n//\n// There are a few useful things to note about this example:\n//\n// - A <Switch> renders the first child <Route> that matches\n// - A <Redirect> may be used to redirect old URLs to new ones\n// - A <Route path=\"*> always matches\n\nexport default function NoMatchExample() {\n  return (\n    <Router>\n      <div>\n        <ul>\n          <li>\n            <Link to=\"/\">Home</Link>\n          </li>\n          <li>\n            <Link to=\"/old-match\">Old Match, to be redirected</Link>\n          </li>\n          <li>\n            <Link to=\"/will-match\">Will Match</Link>\n          </li>\n          <li>\n            <Link to=\"/will-not-match\">Will Not Match</Link>\n          </li>\n          <li>\n            <Link to=\"/also/will/not/match\">Also Will Not Match</Link>\n          </li>\n        </ul>\n\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/old-match\">\n            <Redirect to=\"/will-match\" />\n          </Route>\n          <Route path=\"/will-match\">\n            <WillMatch />\n          </Route>\n          <Route path=\"*\">\n            <NoMatch />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nfunction Home() {\n  return <h3>Home</h3>;\n}\n\nfunction WillMatch() {\n  return <h3>Matched!</h3>;\n}\n\nfunction NoMatch() {\n  let location = useLocation();\n\n  return (\n    <div>\n      <h3>\n        No match for <code>{location.pathname}</code>\n      </h3>\n    </div>\n  );\n}\n","// import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect,\n  useParams,\n  useRouteMatch\n} from \"react-router-dom\";\n\n// Sometimes you don't know all the possible routes\n// for your application up front; for example, when\n// building a file-system browsing UI or determining\n// URLs dynamically based on data. In these situations,\n// it helps to have a dynamic router that is able\n// to generate routes as needed at runtime.\n//\n// This example lets you drill down into a friends\n// list recursively, viewing each user's friend list\n// along the way. As you drill down, notice each segment\n// being added to the URL. You can copy/paste this link\n// to someone else and they will see the same UI.\n//\n// Then click the back button and watch the last\n// segment of the URL disappear along with the last\n// friend list.\n\nexport default function RecursiveExample() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/:id\">\n          <Person />\n        </Route>\n        <Route path=\"/\">\n          <Redirect to=\"/0\" />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nfunction Person() {\n  let { url } = useRouteMatch();\n  let { id } = useParams();\n  let person = find(parseInt(id));\n\n  return (\n    <div>\n      <h3>{person.name}’s Friends</h3>\n\n      <ul>\n        {person.friends.map(id => (\n          <li key={id}>\n            <Link to={`${url}/${id}`}>{find(id).name}</Link>\n          </li>\n        ))}\n      </ul>\n\n      <Switch>\n        <Route path={`${url}/:id`}>\n          <Person />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nconst PEEPS = [\n  { id: 0, name: \"Michelle\", friends: [1, 2, 3] },\n  { id: 1, name: \"Sean\", friends: [0, 3] },\n  { id: 2, name: \"Kim\", friends: [0, 1, 3] },\n  { id: 3, name: \"David\", friends: [1, 2] }\n];\n\nfunction find(id) {\n  return PEEPS.find(p => p.id === id);\n}\n","// import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n// Each logical \"route\" has two components, one for\n// the sidebar and one for the main area. We want to\n// render both of them in different places when the\n// path matches the current URL.\n\n// We are going to use this route config in 2\n// spots: once for the sidebar and once in the main\n// content section. All routes are in the same\n// order they would appear in a <Switch>.\nconst routes = [\n  {\n    path: \"/\",\n    exact: true,\n    sidebar: () => <div>home!</div>,\n    main: () => <h2>Home</h2>\n  },\n  {\n    path: \"/bubblegum\",\n    sidebar: () => <div>bubblegum!</div>,\n    main: () => <h2>Bubblegum</h2>\n  },\n  {\n    path: \"/shoelaces\",\n    sidebar: () => <div>shoelaces!</div>,\n    main: () => <h2>Shoelaces</h2>\n  }\n];\n\nexport default function SidebarExample() {\n  return (\n    <Router>\n      <div style={{ display: \"flex\" }}>\n        <div\n          style={{\n            padding: \"10px\",\n            width: \"40%\",\n            background: \"#f0f0f0\"\n          }}\n        >\n          <ul style={{ listStyleType: \"none\", padding: 0 }}>\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n              <Link to=\"/bubblegum\">Bubblegum</Link>\n            </li>\n            <li>\n              <Link to=\"/shoelaces\">Shoelaces</Link>\n            </li>\n          </ul>\n\n          <Switch>\n            {routes.map((route, index) => (\n              // You can render a <Route> in as many places\n              // as you want in your app. It will render along\n              // with any other <Route>s that also match the URL.\n              // So, a sidebar or breadcrumbs or anything else\n              // that requires you to render multiple things\n              // in multiple places at the same URL is nothing\n              // more than multiple <Route>s.\n              <Route\n                key={index}\n                path={route.path}\n                exact={route.exact}\n                children={<route.sidebar />}\n              />\n            ))}\n          </Switch>\n        </div>\n\n        <div style={{ flex: 1, padding: \"10px\" }}>\n          <Switch>\n            {routes.map((route, index) => (\n              // Render more <Route>s with the same paths as\n              // above, but different components this time.\n              <Route\n                key={index}\n                path={route.path}\n                exact={route.exact}\n                children={<route.main />}\n              />\n            ))}\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n","import \"./animated-transitions.scss\";\n\n// import React from \"react\";\nimport {\n  TransitionGroup,\n  CSSTransition\n} from \"react-transition-group\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect,\n  useLocation,\n  useParams\n} from \"react-router-dom\";\n\nexport default function AnimationExample() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">\n          <Redirect to=\"/hsl/10/90/50\" />\n        </Route>\n        <Route path=\"*\">\n          <AnimationApp />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nfunction AnimationApp() {\n  let location = useLocation();\n\n  return (\n    <div style={styles.fill}>\n      <ul style={styles.nav}>\n        <NavLink to=\"/hsl/10/90/50\">Red</NavLink>\n        <NavLink to=\"/hsl/120/100/40\">Green</NavLink>\n        <NavLink to=\"/rgb/33/150/243\">Blue</NavLink>\n        <NavLink to=\"/rgb/240/98/146\">Pink</NavLink>\n      </ul>\n\n      <div style={styles.content}>\n        <TransitionGroup>\n          {/*\n            This is no different than other usage of\n            <CSSTransition>, just make sure to pass\n            `location` to `Switch` so it can match\n            the old location as it animates out.\n          */}\n          <CSSTransition\n            key={location.key}\n            classNames=\"fade\"\n            timeout={300}\n          >\n            <Switch location={location}>\n              <Route path=\"/hsl/:h/:s/:l\" children={<HSL />} />\n              <Route path=\"/rgb/:r/:g/:b\" children={<RGB />} />\n            </Switch>\n          </CSSTransition>\n        </TransitionGroup>\n      </div>\n    </div>\n  );\n}\n\nfunction NavLink(props) {\n  return (\n    <li style={styles.navItem}>\n      <Link {...props} style={{ color: \"inherit\" }} />\n    </li>\n  );\n}\n\nfunction HSL() {\n  let { h, s, l } = useParams();\n\n  return (\n    <div\n      style={{\n        ...styles.fill,\n        ...styles.hsl,\n        background: `hsl(${h}, ${s}%, ${l}%)`\n      }}\n    >\n      hsl({h}, {s}%, {l}%)\n    </div>\n  );\n}\n\nfunction RGB() {\n  let { r, g, b } = useParams();\n\n  return (\n    <div\n      style={{\n        ...styles.fill,\n        ...styles.rgb,\n        background: `rgb(${r}, ${g}, ${b})`\n      }}\n    >\n      rgb({r}, {g}, {b})\n    </div>\n  );\n}\n\nconst styles = {};\n\nstyles.fill = {\n  position: \"absolute\",\n  left: 0,\n  right: 0,\n  top: 0,\n  bottom: 0\n};\n\nstyles.content = {\n  ...styles.fill,\n  top: \"40px\",\n  textAlign: \"center\"\n};\n\nstyles.nav = {\n  padding: 0,\n  margin: 0,\n  position: \"absolute\",\n  top: 0,\n  height: \"40px\",\n  width: \"100%\",\n  display: \"flex\"\n};\n\nstyles.navItem = {\n  textAlign: \"center\",\n  flex: 1,\n  listStyleType: \"none\",\n  padding: \"10px\"\n};\n\nstyles.hsl = {\n  ...styles.fill,\n  color: \"white\",\n  paddingTop: \"20px\",\n  fontSize: \"30px\"\n};\n\nstyles.rgb = {\n  ...styles.fill,\n  color: \"white\",\n  paddingTop: \"20px\",\n  fontSize: \"30px\"\n};\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n// Some folks find value in a centralized route config.\n// A route config is just data. React is great at mapping\n// data into components, and <Route> is a component.\n\n// Our route config is just an array of logical \"routes\"\n// with `path` and `component` props, ordered the same\n// way you'd do inside a `<Switch>`.\nconst routes = [\n  {\n    path: \"/sandwiches\",\n    component: Sandwiches\n  },\n  {\n    path: \"/tacos\",\n    component: Tacos,\n    routes: [\n      {\n        path: \"/tacos/bus\",\n        component: Bus\n      },\n      {\n        path: \"/tacos/cart\",\n        component: Cart\n      }\n    ]\n  }\n];\n\nexport default function RouteConfigExample() {\n  return (\n    <Router>\n      <div>\n        <ul>\n          <li>\n            <Link to=\"/tacos\">Tacos</Link>\n          </li>\n          <li>\n            <Link to=\"/sandwiches\">Sandwiches</Link>\n          </li>\n        </ul>\n\n        <Switch>\n          {routes.map((route, i) => (\n            <RouteWithSubRoutes key={i} {...route} />\n          ))}\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\n// A special wrapper for <Route> that knows how to\n// handle \"sub\"-routes by passing them in a `routes`\n// prop to the component it renders.\nfunction RouteWithSubRoutes(route) {\n  return (\n    <Route\n      path={route.path}\n      render={props => (\n        // pass the sub-routes down to keep nesting\n        <route.component {...props} routes={route.routes} />\n      )}\n    />\n  );\n}\n\nfunction Sandwiches() {\n  return <h2>Sandwiches</h2>;\n}\n\nfunction Tacos({ routes }) {\n  return (\n    <div>\n      <h2>Tacos</h2>\n      <ul>\n        <li>\n          <Link to=\"/tacos/bus\">Bus</Link>\n        </li>\n        <li>\n          <Link to=\"/tacos/cart\">Cart</Link>\n        </li>\n      </ul>\n\n      <Switch>\n        {routes.map((route, i) => (\n          <RouteWithSubRoutes key={i} {...route} />\n        ))}\n      </Switch>\n    </div>\n  );\n}\n\nfunction Bus() {\n  return <h3>Bus</h3>;\n}\n\nfunction Cart() {\n  return <h3>Cart</h3>;\n}\n","// import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useHistory,\n  useLocation,\n  useParams\n} from \"react-router-dom\";\n\n// This example shows how to render two different screens\n// (or the same screen in a different context) at the same URL,\n// depending on how you got there.\n//\n// Click the \"featured images\" and see them full screen. Then\n// \"visit the gallery\" and click on the colors. Note the URL and\n// the component are the same as before but now we see them\n// inside a modal on top of the gallery screen.\n\nexport default function ModalGalleryExample() {\n  return (\n    <Router>\n      <ModalSwitch />\n    </Router>\n  );\n}\n\nfunction ModalSwitch() {\n  let location = useLocation();\n\n  // This piece of state is set when one of the\n  // gallery links is clicked. The `background` state\n  // is the location that we were at when one of\n  // the gallery links was clicked. If it's there,\n  // use it as the location for the <Switch> so\n  // we show the gallery in the background, behind\n  // the modal.\n  let background = location.state && location.state.background;\n\n  return (\n    <div>\n      <Switch location={background || location}>\n        <Route exact path=\"/\" children={<Home />} />\n        <Route path=\"/gallery\" children={<Gallery />} />\n        <Route path=\"/img/:id\" children={<ImageView />} />\n      </Switch>\n\n      {/* Show the modal when a background page is set */}\n      {background && <Route path=\"/img/:id\" children={<Modal />} />}\n    </div>\n  );\n}\n\nconst IMAGES = [\n  { id: 0, title: \"Dark Orchid\", color: \"DarkOrchid\" },\n  { id: 1, title: \"Lime Green\", color: \"LimeGreen\" },\n  { id: 2, title: \"Tomato\", color: \"Tomato\" },\n  { id: 3, title: \"Seven Ate Nine\", color: \"#789\" },\n  { id: 4, title: \"Crimson\", color: \"Crimson\" }\n];\n\nfunction Thumbnail({ color }) {\n  return (\n    <div\n      style={{\n        width: 50,\n        height: 50,\n        background: color\n      }}\n    />\n  );\n}\n\nfunction Image({ color }) {\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        height: 400,\n        background: color\n      }}\n    />\n  );\n}\n\nfunction Home() {\n  return (\n    <div>\n      <Link to=\"/gallery\">Visit the Gallery</Link>\n      <h2>Featured Images</h2>\n      <ul>\n        <li>\n          <Link to=\"/img/2\">Tomato</Link>\n        </li>\n        <li>\n          <Link to=\"/img/4\">Crimson</Link>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nfunction Gallery() {\n  let location = useLocation();\n\n  return (\n    <div>\n      {IMAGES.map(i => (\n        <Link\n          key={i.id}\n          to={{\n            pathname: `/img/${i.id}`,\n            // This is the trick! This link sets\n            // the `background` in location state.\n            state: { background: location }\n          }}\n        >\n          <Thumbnail color={i.color} />\n          <p>{i.title}</p>\n        </Link>\n      ))}\n    </div>\n  );\n}\n\nfunction ImageView() {\n  let { id } = useParams();\n  let image = IMAGES[parseInt(id, 10)];\n\n  if (!image) return <div>Image not found</div>;\n\n  return (\n    <div>\n      <h1>{image.title}</h1>\n      <Image color={image.color} />\n    </div>\n  );\n}\n\nfunction Modal() {\n  let history = useHistory();\n  let { id } = useParams();\n  let image = IMAGES[parseInt(id, 10)];\n\n  if (!image) return null;\n\n  let back = e => {\n    e.stopPropagation();\n    history.goBack();\n  };\n\n  return (\n    <div\n      onClick={back}\n      style={{\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        bottom: 0,\n        right: 0,\n        background: \"rgba(0, 0, 0, 0.15)\"\n      }}\n    >\n      <div\n        className=\"modal\"\n        style={{\n          position: \"absolute\",\n          background: \"#fff\",\n          top: 25,\n          left: \"10%\",\n          right: \"10%\",\n          padding: 15,\n          border: \"2px solid #444\"\n        }}\n      >\n        <h1>{image.title}</h1>\n        <Image color={image.color} />\n        <button type=\"button\" onClick={back}>\n          Close\n        </button>\n      </div>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport { StaticRouter as Router, Route } from \"react-router-dom\";\n\n// This example renders a route within a StaticRouter and populates its\n// staticContext, which it then prints out. In the real world you would\n// use the StaticRouter for server-side rendering:\n//\n// import express from \"express\";\n// import ReactDOMServer from \"react-dom/server\";\n//\n// const app = express()\n//\n// app.get('*', (req, res) => {\n//   let staticContext = {}\n//\n//   let html = ReactDOMServer.renderToString(\n//     <StaticRouter location={req.url} context={staticContext}>\n//       <App /> (includes the RouteStatus component below e.g. for 404 errors)\n//     </StaticRouter>\n//   );\n//\n//   res.status(staticContext.statusCode || 200).send(html);\n// });\n//\n// app.listen(process.env.PORT || 3000);\n\nfunction RouteStatus(props) {\n  return (\n    <Route\n      render={({ staticContext }) => {\n        // we have to check if staticContext exists\n        // because it will be undefined if rendered through a BrowserRouter\n        if (staticContext) {\n          staticContext.statusCode = props.statusCode;\n        }\n\n        return <div>{props.children}</div>;\n      }}\n    />\n  );\n}\n\nfunction PrintContext(props) {\n  return <p>Static context: {JSON.stringify(props.staticContext)}</p>;\n}\n\nexport default class StaticRouterExample extends Component {\n  // This is the context object that we pass to the StaticRouter.\n  // It can be modified by routes to provide additional information\n  // for the server-side render\n  staticContext = {};\n\n  render() {\n    return (\n      <Router location=\"/foo\" context={this.staticContext}>\n        <div>\n          <RouteStatus statusCode={404}>\n            <p>Route with statusCode 404</p>\n            <PrintContext staticContext={this.staticContext} />\n          </RouteStatus>\n        </div>\n      </Router>\n    );\n  }\n}\n","// import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Link,\n  useLocation\n} from \"react-router-dom\";\n\n// React Router does not have any opinions about\n// how you should parse URL query strings.\n//\n// If you use simple key=value query strings and\n// you do not need to support IE 11, you can use\n// the browser's built-in URLSearchParams API.\n//\n// If your query strings contain array or object\n// syntax, you'll probably need to bring your own\n// query parsing function.\n\nexport default function QueryParamsExample() {\n  return (\n    <Router>\n      <QueryParamsDemo />\n    </Router>\n  );\n}\n\n// A custom hook that builds on useLocation to parse\n// the query string for you.\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\nfunction QueryParamsDemo() {\n  let query = useQuery();\n\n  return (\n    <div>\n      <div>\n        <h2>Accounts</h2>\n        <ul>\n          <li>\n            <Link to=\"/account?name=netflix\">Netflix</Link>\n          </li>\n          <li>\n            <Link to=\"/account?name=zillow-group\">Zillow Group</Link>\n          </li>\n          <li>\n            <Link to=\"/account?name=yahoo\">Yahoo</Link>\n          </li>\n          <li>\n            <Link to=\"/account?name=modus-create\">Modus Create</Link>\n          </li>\n        </ul>\n\n        <Child name={query.get(\"name\")} />\n      </div>\n    </div>\n  );\n}\n\nfunction Child({ name }) {\n  return (\n    <div>\n      {name ? (\n        <h3>\n          The <code>name</code> in the query string is &quot;{name}\n          &quot;\n        </h3>\n      ) : (\n        <h3>There is no name in the query string</h3>\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport { Route } from \"react-router-dom\";\nimport './App.css';\nimport * as Cmpt from './example';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Route exact path='/animate-transitions' component={Cmpt.AnimatedTransitions} />\n      <Route exact path='/basic' component={Cmpt.Basic} />\n      <Route exact path='/custom-link' component={Cmpt.CustomLink} />\n      <Route exact path='/model-gallery' component={Cmpt.ModalGallery} />\n      <Route exact path='/nesting' component={Cmpt.Nesting} />\n      <Route exact path='/no-match-40' component={Cmpt.NoMatch404} />\n      <Route exact path='/preventing-transitions' component={Cmpt.PreventingTransitions} />\n      <Route exact path='/query-parameter' component={Cmpt.QueryParameters} />\n      <Route exact path='/recursive-paths' component={Cmpt.RecursivePaths} />\n      <Route exact path='/redirects-auth' component={Cmpt.RedirectsAuth} />\n      <Route exact path='/route-config' component={Cmpt.RouteConfig} />\n      <Route exact path='/sidebar' component={Cmpt.Sidebar} />\n      <Route exact path='/static-router-context' component={Cmpt.StaticRouterContext} />\n      <Route exact path='/url-parameter' component={Cmpt.UrlParameters} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}